version: '3.8'
services:
  database:
    image: postgres:17.0
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "postgres"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data/pg:/var/lib/postgresql/data
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  vault:
    image: vault:1.13.3
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
    command: vault server -config=/vault/config/vault.json
    ports:
      - 8200:8200
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
#  configserver:
#    image: ostock/configserver:0.0.1-SNAPSHOT
#    ports:
#      - "8071:8071"
#    environment:
#      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
#    networks:
#      backend:
#        aliases:
#          - "configserver"
#  licensingservice:
#    image: ostock/licensing-service:0.0.2-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_PORT:   "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY:       "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8080:8080"
#    networks:
#      - backend

networks:
  backend:
    driver: bridge